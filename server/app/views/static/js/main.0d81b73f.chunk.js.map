{"version":3,"sources":["slices/message.js","common/EventBus.js","http-common.js","services/auth-header.js","services/user.service.js","components/BoardAdmin.js","components/BoardModerator.js","components/BoardUser.js","components/Home.js","services/auth.service.js","slices/auth.js","components/Login.js","components/Profile.js","components/Register.js","helpers/history.js","App.js","services/TutorialService.js","slices/tutorials.js","store.js","index.js"],"names":["messageSlice","createSlice","name","initialState","reducers","setMessage","state","action","message","payload","clearMessage","reducer","actions","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","axios","create","baseURL","process","REACT_APP_API_BASE_URL","headers","authHeader","user","JSON","parse","localStorage","getItem","accessToken","Authorization","userService","getPublicContent","http","get","getUserBoard","getModeratorBoard","getAdminBoard","BoardAdmin","useState","content","setContent","useEffect","UserService","then","response","error","_content","toString","status","EventBus","className","BoardModerator","BoardUser","Home","authService","register","username","email","password","post","login","setItem","stringify","logout","removeItem","createAsyncThunk","thunkAPI","a","AuthService","rejectWithValue","isLoggedIn","extraReducers","fulfilled","rejected","Login","props","loading","setLoading","useSelector","auth","useDispatch","validationSchema","Yup","shape","required","to","src","alt","initialValues","onSubmit","formValue","unwrap","history","push","window","location","reload","catch","htmlFor","type","component","disabled","role","Profile","currentUser","substring","substr","length","id","roles","map","index","Register","successful","setSuccessful","test","val","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","logOut","useCallback","includes","href","onClick","exact","path","TutorialService","getAll","update","put","delete","removeAll","findByTitle","title","createTutorial","description","TutorialDataService","res","retrieveTutorials","updateTutorial","deleteTutorial","deleteAllTutorials","findTutorialsByTitle","authReducer","messageReducer","tutorials","findIndex","tutorial","splice","store","configureStore","devTools","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.0d81b73f.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {};\n\nconst messageSlice = createSlice({\n    name: \"message\",\n    initialState,\n    reducers: {\n        setMessage: (state, action) => {\n            return { message: action.payload };\n        },\n        clearMessage: () => {\n            return { message: \"\" };\n        },\n    },\n});\n\n\nconst { reducer, actions } = messageSlice;\n\nexport const { setMessage, clearMessage } = actions\nexport default reducer;\n","const eventBus = {\n    on(event, callback) {\n        document.addEventListener(event, (e) => callback(e.detail));\n    },\n    dispatch(event, data) {\n        document.dispatchEvent(new CustomEvent(event, { detail: data }));\n    },\n    remove(event, callback) {\n        document.removeEventListener(event, callback);\n    },\n};\n\nexport default eventBus;","import axios from \"axios\";\n\nexport default axios.create({\n    baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:6868/api',\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        return { Authorization: 'Bearer ' + user.accessToken };\n    } else {\n        return {};\n    }\n}","import http from \"../http-common\";\nimport authHeader from \"./auth-header\";\n\n\nconst getPublicContent = () => {\n    return http.get(\"/all\");\n};\n\nconst getUserBoard = () => {\n    return http.get(\"/user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n    return http.get(\"/mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n    return http.get(\"/admin\", { headers: authHeader() });\n};\n\nconst userService = {\n    getPublicContent,\n    getUserBoard,\n    getModeratorBoard,\n    getAdminBoard,\n};\n\nexport default userService","import React, { useEffect, useState } from \"react\";\nimport EventBus from \"../common/EventBus\";\nimport UserService from \"../services/user.service\";\n\n\nconst BoardAdmin = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getAdminBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n                if (error.response && error.response.status === 401) {\n                    EventBus.dispatch(\"logout\");\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardAdmin;\n","import React, { useEffect, useState } from \"react\";\nimport EventBus from \"../common/EventBus\";\nimport UserService from \"../services/user.service\";\n\nconst BoardModerator = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getModeratorBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n                if (error.response && error.response.status === 401) {\n                    EventBus.dispatch(\"logout\");\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardModerator;\n","import React, { useEffect, useState } from \"react\";\nimport EventBus from \"../common/EventBus\";\nimport UserService from \"../services/user.service\";\n\nconst BoardUser = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getUserBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n                if (error.response && error.response.status === 401) {\n                    EventBus.dispatch(\"logout\");\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardUser;\n","import React, { useEffect, useState } from \"react\";\nimport UserService from \"../services/user.service\";\n\n\nconst Home = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getPublicContent().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response && error.response.data) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default Home;","import http from \"../http-common\";\n\nconst register = (username, email, password) => {\n    return http.post(\"auth/signup\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return http\n        .post(\"auth/signin\", {\n            username,\n            password,\n        })\n        .then((response) => {\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n\n            return response.data;\n        });\n};\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n};\n\n\nconst authService = {\n    register,\n    login,\n    logout,\n};\n\nexport default authService;","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setMessage } from \"./message\";\n\nimport AuthService from \"../services/auth.service\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async ({ username, email, password }, thunkAPI) => {\n        try {\n            const response = await AuthService.register(username, email, password);\n            thunkAPI.dispatch(setMessage(response.data.message));\n            return response.data;\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            thunkAPI.dispatch(setMessage(message));\n            return thunkAPI.rejectWithValue();\n        }\n    }\n);\n\nexport const login = createAsyncThunk(\n    \"auth/login\",\n    async ({ username, password }, thunkAPI) => {\n        try {\n            const data = await AuthService.login(username, password);\n            return { user: data };\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            thunkAPI.dispatch(setMessage(message));\n            return thunkAPI.rejectWithValue();\n        }\n    }\n);\n\nexport const logout = createAsyncThunk(\"auth/logout\", () => {\n    AuthService.logout();\n});\n\n\nconst initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n\nconst authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    extraReducers: {\n        [register.fulfilled]: (state, action) => {\n            state.isLoggedIn = false;\n        },\n        [register.rejected]: (state, action) => {\n            state.isLoggedIn = false;\n        },\n        [login.fulfilled]: (state, action) => {\n            state.isLoggedIn = true;\n            state.user = action.payload.user;\n        },\n        [login.rejected]: (state, action) => {\n            state.isLoggedIn = false;\n            state.user = null;\n        },\n        [logout.fulfilled]: (state, action) => {\n            state.isLoggedIn = false;\n            state.user = null;\n        },\n    },\n});\n\nconst { reducer } = authSlice;\nexport default reducer;","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { login } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\n\nconst Login = (props) => {\n    const [loading, setLoading] = useState(false);\n\n    const { isLoggedIn } = useSelector((state) => state.auth);\n    const { message } = useSelector((state) => state.message);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n    const initialValues = {\n        username: \"\",\n        password: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string().required(\"This field is required!\"),\n        password: Yup.string().required(\"This field is required!\"),\n    });\n\n    const handleLogin = (formValue) => {\n        const { username, password } = formValue;\n        setLoading(true);\n\n        dispatch(login({ username, password }))\n            .unwrap()\n            .then(() => {\n                props.history.push(\"/profile\");\n                window.location.reload();\n            })\n            .catch(() => {\n                setLoading(false);\n            });\n    };\n\n    if (isLoggedIn) {\n        return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n        <div className=\"col-md-12 login-form\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleLogin}\n                >\n                    <Form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"username\"\n                                component=\"div\"\n                                className=\"alert alert-danger\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\">Password</label>\n                            <Field name=\"password\" type=\"password\" className=\"form-control\" />\n                            <ErrorMessage\n                                name=\"password\"\n                                component=\"div\"\n                                className=\"alert alert-danger\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading}>\n                                {loading && (\n                                    <span className=\"spinner-border spinner-border-sm\"></span>\n                                )}\n                                <span>Login</span>\n                            </button>\n                        </div>\n                    </Form>\n                </Formik>\n            </div>\n\n            {message && (\n                <div className=\"form-group\">\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                        {message}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nconst Profile = () => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n\n    if (!currentUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>\n                    <strong>{currentUser.username}</strong> Profile\n                </h3>\n            </header>\n            <p>\n                <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n            </p>\n            <p>\n                <strong>Id:</strong> {currentUser.id}\n            </p>\n            <p>\n                <strong>Email:</strong> {currentUser.email}\n            </p>\n            <strong>Authorities:</strong>\n            <ul>\n                {currentUser.roles &&\n                    currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n            </ul>\n        </div>\n    );\n};\n\nexport default Profile;","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { register } from \"../slices/auth\";\nimport { clearMessage } from \"../slices/message\";\n\nconst Register = () => {\n    const [successful, setSuccessful] = useState(false);\n\n    const { message } = useSelector((state) => state.message);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(clearMessage());\n    }, [dispatch]);\n\n    const initialValues = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n        username: Yup.string()\n            .test(\n                \"len\",\n                \"The username must be between 3 and 20 characters.\",\n                (val) =>\n                    val &&\n                    val.toString().length >= 3 &&\n                    val.toString().length <= 20\n            )\n            .required(\"This field is required!\"),\n        email: Yup.string()\n            .email(\"This is not a valid email.\")\n            .required(\"This field is required!\"),\n        password: Yup.string()\n            .test(\n                \"len\",\n                \"The password must be between 6 and 40 characters.\",\n                (val) =>\n                    val &&\n                    val.toString().length >= 6 &&\n                    val.toString().length <= 40\n            )\n            .required(\"This field is required!\"),\n    });\n\n    const handleRegister = (formValue) => {\n        const { username, email, password } = formValue;\n\n        setSuccessful(false);\n\n        dispatch(register({ username, email, password }))\n            .unwrap()\n            .then(() => {\n                setSuccessful(true);\n            })\n            .catch(() => {\n                setSuccessful(false);\n            });\n    };\n\n    return (\n        <div className=\"col-md-12 signup-form\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n                <Formik\n                    initialValues={initialValues}\n                    validationSchema={validationSchema}\n                    onSubmit={handleRegister}\n                >\n                    <Form>\n                        {!successful && (\n                            <div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username</label>\n                                    <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                                    <ErrorMessage\n                                        name=\"username\"\n                                        component=\"div\"\n                                        className=\"alert alert-danger\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email</label>\n                                    <Field name=\"email\" type=\"email\" className=\"form-control\" />\n                                    <ErrorMessage\n                                        name=\"email\"\n                                        component=\"div\"\n                                        className=\"alert alert-danger\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <Field\n                                        name=\"password\"\n                                        type=\"password\"\n                                        className=\"form-control\"\n                                    />\n                                    <ErrorMessage\n                                        name=\"password\"\n                                        component=\"div\"\n                                        className=\"alert alert-danger\"\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\n                                </div>\n                            </div>\n                        )}\n                    </Form>\n                </Formik>\n            </div>\n\n            {message && (\n                <div className=\"form-group\">\n                    <div\n                        className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Register;\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { clearMessage } from \"./slices/message\";\nimport \"./App.css\";\nimport EventBus from \"./common/EventBus\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardUser from \"./components/BoardUser\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Login\";\nimport Profile from \"./components/Profile\";\nimport Register from \"./components/Register\";\nimport { history } from \"./helpers/history\";\nimport { logout } from \"./slices/auth\";\n// import AuthVerify from \"./common/AuthVerify\";\n\nconst App = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    } else {\n      setShowModeratorBoard(false);\n      setShowAdminBoard(false);\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, [currentUser, logOut]);\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Full-stack\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n        {/* <AuthVerify logOut={logOut}/> */}\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","import http from \"../http-common\";\n\nconst getAll = () => {\n    return http.get(\"/tutorials\");\n};\n\nconst get = id => {\n    return http.get(`/tutorials/${id}`);\n};\n\nconst create = data => {\n    return http.post(\"/tutorials\", data);\n};\n\nconst update = (id, data) => {\n    return http.put(`/tutorials/${id}`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/tutorials/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/tutorials`);\n};\n\nconst findByTitle = title => {\n    return http.get(`/tutorials?title=${title}`);\n};\n\nconst TutorialService = {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByTitle\n};\n\nexport default TutorialService; ","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport TutorialDataService from \"../services/TutorialService\";\n\nconst initialState = [];\n\nexport const createTutorial = createAsyncThunk(\n    \"tutorials/create\",\n    async ({ title, description }) => {\n        const res = await TutorialDataService.create({ title, description });\n        return res.data;\n    }\n);\n\nexport const retrieveTutorials = createAsyncThunk(\n    \"tutorials/retrieve\",\n    async () => {\n        const res = await TutorialDataService.getAll();\n        return res.data;\n    }\n);\n\nexport const updateTutorial = createAsyncThunk(\n    \"tutorials/update\",\n    async ({ id, data }) => {\n        const res = await TutorialDataService.update(id, data);\n        return res.data;\n    }\n);\n\nexport const deleteTutorial = createAsyncThunk(\n    \"tutorials/delete\",\n    async ({ id }) => {\n        await TutorialDataService.remove(id);\n        return { id };\n    }\n);\n\nexport const deleteAllTutorials = createAsyncThunk(\n    \"tutorials/deleteAll\",\n    async () => {\n        const res = await TutorialDataService.removeAll();\n        return res.data;\n    }\n);\n\nexport const findTutorialsByTitle = createAsyncThunk(\n    \"tutorials/findByTitle\",\n    async ({ title }) => {\n        const res = await TutorialDataService.findByTitle(title);\n        return res.data;\n    }\n);\n\nconst tutorialSlice = createSlice({\n    name: \"tutorial\",\n    initialState,\n    extraReducers: {\n        [createTutorial.fulfilled]: (state, action) => {\n            state.push(action.payload);\n        },\n        [retrieveTutorials.fulfilled]: (state, action) => {\n            return [...action.payload];\n        },\n        [updateTutorial.fulfilled]: (state, action) => {\n            const index = state.findIndex(tutorial => tutorial.id === action.payload.id);\n            state[index] = {\n                ...state[index],\n                ...action.payload,\n            };\n        },\n        [deleteTutorial.fulfilled]: (state, action) => {\n            let index = state.findIndex(({ id }) => id === action.payload.id);\n            state.splice(index, 1);\n        },\n        [deleteAllTutorials.fulfilled]: (state, action) => {\n            return [];\n        },\n        [findTutorialsByTitle.fulfilled]: (state, action) => {\n            return [...action.payload];\n        },\n    },\n});\n\nconst { reducer } = tutorialSlice;\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from \"./slices/auth\";\nimport messageReducer from \"./slices/message\";\nimport tutorialReducer from './slices/tutorials';\n\nconst reducer = {\n    auth: authReducer,\n    message: messageReducer,\n    tutorials: tutorialReducer\n}\n\nconst store = configureStore({\n    reducer: reducer,\n    devTools: true,\n})\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n\n  <Provider store={store}>\n    <HashRouter basename=\"/#\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}